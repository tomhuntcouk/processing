{"version":3,"file":"transformation-matrix.min.js","mappings":"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","sources":["webpack://TransformationMatrix/webpack/universalModuleDefinition","webpack://TransformationMatrix/webpack/bootstrap","webpack://TransformationMatrix/webpack/runtime/define property getters","webpack://TransformationMatrix/webpack/runtime/hasOwnProperty shorthand","webpack://TransformationMatrix/webpack/runtime/make namespace object","webpack://TransformationMatrix/./src/applyToPoint.js","webpack://TransformationMatrix/./src/fromObject.js","webpack://TransformationMatrix/./src/fromString.js","webpack://TransformationMatrix/./src/identity.js","webpack://TransformationMatrix/./src/inverse.js","webpack://TransformationMatrix/./src/utils.js","webpack://TransformationMatrix/./src/isAffineMatrix.js","webpack://TransformationMatrix/./src/translate.js","webpack://TransformationMatrix/./src/transform.js","webpack://TransformationMatrix/./src/rotate.js","webpack://TransformationMatrix/./src/scale.js","webpack://TransformationMatrix/./src/shear.js","webpack://TransformationMatrix/./src/skew.js","webpack://TransformationMatrix/./src/toString.js","webpack://TransformationMatrix/./src/smoothMatrix.js","webpack://TransformationMatrix/./src/fromTriangles.js","webpack://TransformationMatrix/./src/fromDefinition.js","webpack://TransformationMatrix/./src/fromTransformAttribute.autogenerated.js","webpack://TransformationMatrix/./src/fromTransformAttribute.js","webpack://TransformationMatrix/./src/decompose.js","webpack://TransformationMatrix/./src/flip.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TransformationMatrix\"] = factory();\n\telse\n\t\troot[\"TransformationMatrix\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Calculate a point transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param  point {Point} Point\n * @returns {Point} Point\n */\nexport function applyToPoint (matrix, point) {\n  return Array.isArray(point)\n    ? [\n        matrix.a * point[0] + matrix.c * point[1] + matrix.e,\n        matrix.b * point[0] + matrix.d * point[1] + matrix.f\n      ]\n    : {\n        x: matrix.a * point.x + matrix.c * point.y + matrix.e,\n        y: matrix.b * point.x + matrix.d * point.y + matrix.f\n      }\n}\n\n/**\n * Calculate an array of points transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param points {Point[]} Array of point\n * @returns {Point[]} Array of point\n */\nexport function applyToPoints (matrix, points) {\n  return points.map(point => applyToPoint(matrix, point))\n}\n","/**\n * Extract an affine matrix from an object that contains a,b,c,d,e,f keys\n * Any value could be a float or a string that contains a float\n * @param object {Object} Object that contains a,b,c,d,e,f keys\n * @return {Matrix} Affine Matrix\n */\nexport function fromObject (object) {\n  return {\n    a: parseFloat(object.a),\n    b: parseFloat(object.b),\n    c: parseFloat(object.c),\n    d: parseFloat(object.d),\n    e: parseFloat(object.e),\n    f: parseFloat(object.f)\n  }\n}\n","/**\n * @ignore\n * @type {RegExp}\n */\nconst matrixRegex = /^matrix\\(\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*\\)$/i\n\n/**\n * Parse a string formatted as matrix(a,b,c,d,e,f)\n * @param string {string} String with an affine matrix\n * @returns {Matrix} Affine Matrix\n *\n * @example\n * > fromString('matrix(1,2,3,4,5,6)')\n * {a: 1, b: 2, c: 3, d: 4, c: 5, e: 6}\n */\nexport function fromString (string) {\n  const parsed = string.match(matrixRegex)\n  if (parsed === null || parsed.length < 7) throw new Error(`'${string}' is not a matrix`)\n  return {\n    a: parseFloat(parsed[1]),\n    b: parseFloat(parsed[2]),\n    c: parseFloat(parsed[3]),\n    d: parseFloat(parsed[4]),\n    e: parseFloat(parsed[5]),\n    f: parseFloat(parsed[6])\n  }\n}\n","/**\n * Identity matrix\n * @returns {Matrix} Affine Matrix\n */\nexport function identity () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n","/**\n * Calculate a matrix that is the inverse of the provided matrix\n * @param matrix {Matrix} Affine Matrix\n * @returns {Matrix} Inverted Affine Matrix\n */\nexport function inverse (matrix) {\n  // http://www.wolframalpha.com/input/?i=Inverse+%5B%7B%7Ba,c,e%7D,%7Bb,d,f%7D,%7B0,0,1%7D%7D%5D\n\n  const { a, b, c, d, e, f } = matrix\n\n  const denom = a * d - b * c\n\n  return {\n    a: d / denom,\n    b: b / -denom,\n    c: c / -denom,\n    d: a / denom,\n    e: (d * e - c * f) / -denom,\n    f: (b * e - a * f) / denom\n  }\n}\n","export function isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nexport function isNumeric (n) {\n  return typeof n === 'number' &&\n    !Number.isNaN(n) &&\n    Number.isFinite(n)\n}\n\nexport function isObject (obj) {\n  return typeof obj === 'object' &&\n    obj !== null &&\n    !Array.isArray(obj)\n}\n\nexport function matchesShape (obj, keys) {\n  return keys.every(key => key in obj)\n}\n","import { isNumeric, isObject } from './utils'\n\n/**\n * Check if the object contain an affine matrix\n * @param object {Object} Generic Plain Object\n * @return {boolean} True if is an object and contains an affine matrix\n */\n\nexport function isAffineMatrix (object) {\n  return isObject(object) &&\n    'a' in object &&\n    isNumeric(object.a) &&\n    'b' in object &&\n    isNumeric(object.b) &&\n    'c' in object &&\n    isNumeric(object.c) &&\n    'd' in object &&\n    isNumeric(object.d) &&\n    'e' in object &&\n    isNumeric(object.e) &&\n    'f' in object &&\n    isNumeric(object.f)\n}\n","/**\n * Calculate a translate matrix\n * @param tx {number} Translation on axis x\n * @param [ty = 0] {number} Translation on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function translate (tx, ty = 0) {\n  return {\n    a: 1,\n    c: 0,\n    e: tx,\n    b: 0,\n    d: 1,\n    f: ty\n  }\n}\n","/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\nconst { cos, sin, PI } = Math\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotate (angle, cx, cy) {\n  const cosAngle = cos(angle)\n  const sinAngle = sin(angle)\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  }\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    rotationMatrix,\n    translate(-cx, -cy)\n  ])\n}\n\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function scale (sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx\n\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  }\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    scaleMatrix,\n    translate(-cx, -cy)\n  ])\n}\n","/**\n * Calculate a shear matrix\n * @param shx {number} Shear on axis x\n * @param shy {number} Shear on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function shear (shx, shy) {\n  return {\n    a: 1,\n    c: shx,\n    e: 0,\n    b: shy,\n    d: 1,\n    f: 0\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew\nconst { tan } = Math\n\n/**\n * Calculate a skew matrix\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skew (ax, ay) {\n  return {\n    a: 1,\n    c: tan(ax),\n    e: 0,\n    b: tan(ay),\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Calculate a skew matrix using DEG angles\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skewDEG (ax, ay) {\n  return skew(ax * Math.PI / 180, ay * Math.PI / 180)\n}\n","/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toSVG (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toString (matrix) {\n  return `matrix(${matrix.a},${matrix.b},${matrix.c},${matrix.d},${matrix.e},${matrix.f})`\n}\n","/**\n * Rounds all elements of the given matrix using the given precision\n * @param matrix {Matrix} An affine matrix to round\n * @param [precision] {number} A precision to use for Math.round. Defaults to 10000000000 (meaning which rounds to the 10th digit after the comma).\n * @returns {Matrix} The rounded Affine Matrix\n */\nexport function smoothMatrix (matrix, precision = 10000000000) {\n  return {\n    a: Math.round(matrix.a * precision) / precision,\n    b: Math.round(matrix.b * precision) / precision,\n    c: Math.round(matrix.c * precision) / precision,\n    d: Math.round(matrix.d * precision) / precision,\n    e: Math.round(matrix.e * precision) / precision,\n    f: Math.round(matrix.f * precision) / precision\n  }\n}\n","import { inverse } from './inverse'\nimport { transform } from './transform'\nimport { smoothMatrix } from './smoothMatrix'\n\n/**\n * Returns a matrix that transforms a triangle t1 into another triangle t2, or throws an exception if it is impossible.\n * @param t1 {Point[]} Array of points containing the three points for the first triangle\n * @param t2 {Point[]} Array of points containing the three points for the second triangle\n * @returns {Matrix} Matrix which transforms t1 to t2\n * @throws Exception if the matrix becomes not invertible\n */\nexport function fromTriangles (t1, t2) {\n  // point p = first point of the triangle\n  const px1 = t1[0].x != null ? t1[0].x : t1[0][0]\n  const py1 = t1[0].y != null ? t1[0].y : t1[0][1]\n  const px2 = t2[0].x != null ? t2[0].x : t2[0][0]\n  const py2 = t2[0].y != null ? t2[0].y : t2[0][1]\n\n  // point q = second point of the triangle\n  const qx1 = t1[1].x != null ? t1[1].x : t1[1][0]\n  const qy1 = t1[1].y != null ? t1[1].y : t1[1][1]\n  const qx2 = t2[1].x != null ? t2[1].x : t2[1][0]\n  const qy2 = t2[1].y != null ? t2[1].y : t2[1][1]\n\n  // point r = third point of the triangle\n  const rx1 = t1[2].x != null ? t1[2].x : t1[2][0]\n  const ry1 = t1[2].y != null ? t1[2].y : t1[2][1]\n  const rx2 = t2[2].x != null ? t2[2].x : t2[2][0]\n  const ry2 = t2[2].y != null ? t2[2].y : t2[2][1]\n\n  const r1 = {\n    a: px1 - rx1,\n    b: py1 - ry1,\n    c: qx1 - rx1,\n    d: qy1 - ry1,\n    e: rx1,\n    f: ry1\n  }\n  const r2 = {\n    a: px2 - rx2,\n    b: py2 - ry2,\n    c: qx2 - rx2,\n    d: qy2 - ry2,\n    e: rx2,\n    f: ry2\n  }\n\n  const inverseR1 = inverse(r1)\n  const affineMatrix = transform([r2, inverseR1])\n\n  // round the matrix elements to smooth the finite inversion\n  return smoothMatrix(affineMatrix)\n}\n","import { fromObject } from './fromObject'\nimport { translate } from './translate'\nimport { scale } from './scale'\nimport { rotateDEG } from './rotate'\nimport { skewDEG } from './skew'\nimport { shear } from './shear'\n\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\nexport function fromDefinition (definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition)\n    ? definitionOrArrayOfDefinition.map(mapper)\n    : mapper(definitionOrArrayOfDefinition)\n\n  function mapper (descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor &&\n          'b' in descriptor &&\n          'c' in descriptor &&\n          'd' in descriptor &&\n          'e' in descriptor &&\n          'f' in descriptor\n        ) {\n          return fromObject(descriptor)\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM')\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty)\n\n        return translate(descriptor.tx)\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy)\n\n        return scale(descriptor.sx)\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy)\n        }\n        return rotateDEG(descriptor.angle)\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(descriptor.angle, 0)\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(0, descriptor.angle)\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return shear(descriptor.shx, descriptor.shy)\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR')\n    }\n  }\n}\n","// Generated by PEG.js v0.11.0-master.b7b87ea, https://pegjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found, location) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { transformList: peg$parsetransformList };\n  var peg$startRuleFunction = peg$parsetransformList;\n\n  var peg$c0 = \"matrix\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"translate\";\n  var peg$c4 = \"scale\";\n  var peg$c5 = \"rotate\";\n  var peg$c6 = \"skewX\";\n  var peg$c7 = \"skewY\";\n  var peg$c8 = \",\";\n  var peg$c9 = \".\";\n\n  var peg$r0 = /^[eE]/;\n  var peg$r1 = /^[+\\-]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\n  var peg$e8 = peg$literalExpectation(\",\", false);\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\n  var peg$e10 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e13 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(ts) { return ts; };\n  var peg$f1 = function(t, ts) { return t.concat(ts) };\n  var peg$f2 = function(a, b, c, d, e, f) {\n        return [{type: 'matrix', a: a, b: b, c: c, d: d, e: e, f: f}];\n      };\n  var peg$f3 = function(tx, ty) {\n        var t = {type: 'translate', tx: tx};\n        if (ty) t.ty = ty;\n        return [t];\n      };\n  var peg$f4 = function(sx, sy) {\n        var s = {type:'scale', sx: sx};\n        if (sy) s.sy = sy;\n        return [s];\n      };\n  var peg$f5 = function(angle, c) {\n        var r = {type:'rotate', angle: angle};\n        if (c) {\n          r.cx = c[0];\n          r.cy = c[1];\n        }\n        return [r];\n      };\n  var peg$f6 = function(angle) {\n        return [{type: 'skewX', angle: angle}];\n      };\n  var peg$f7 = function(angle) {\n        return [{type: 'skewY', angle: angle}];\n      };\n  var peg$f8 = function(f) { return parseFloat(f.join(\"\")); };\n  var peg$f9 = function(i) { return parseInt(i.join(\"\")); };\n  var peg$f10 = function(n) { return n; };\n  var peg$f11 = function(n1, n2) { return [n1, n2]; };\n  var peg$f12 = function(ds) { return ds.join(\"\"); };\n  var peg$f13 = function(f, e) { return [f, e || null].join(\"\")};\n  var peg$f14 = function(d, e) { return [d, e].join(\"\")};\n  var peg$f15 = function(d1, d2) { return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\"); };\n  var peg$f16 = function(d) { return d.join(\"\"); };\n  var peg$f17 = function(s, d) { return ['e', s, d.join(\"\")].join(\"\") };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found, location),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parsetransformList() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewsp();\n    }\n    s2 = peg$parsetransforms();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = [];\n    s4 = peg$parsewsp();\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = peg$parsewsp();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f0(s2);\n\n    return s0;\n  }\n\n  function peg$parsetransforms() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsetransform();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecommaWsp();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecommaWsp();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetransforms();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetransform();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransform() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e0);\n    if (input.substr(peg$currPos, 6) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWsp();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenumber();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsecommaWsp();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parsenumber();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsecommaWsp();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parsenumber();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parsecommaWsp();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parsenumber();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parsecommaWsp();\n                          if (s14 !== peg$FAILED) {\n                            s15 = peg$parsenumber();\n                            if (s15 !== peg$FAILED) {\n                              s16 = [];\n                              s17 = peg$parsewsp();\n                              while (s17 !== peg$FAILED) {\n                                s16.push(s17);\n                                s17 = peg$parsewsp();\n                              }\n                              rule$expects(peg$e2);\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s17 = peg$c2;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                              }\n                              if (s17 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e3);\n    if (input.substr(peg$currPos, 9) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f3(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e4);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f4(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e5);\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s1 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspTwoNumbers();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f5(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 5) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f6(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 5) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      rule$expects(peg$e1);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsesign();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parsefloatingPointConstant();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseintegerConstant();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspNumber() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspTwoNumbers() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecommaWsp();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenumber();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWsp() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewsp();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsewsp();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsewsp();\n      }\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsecomma();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsewsp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsewsp();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e8);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseintegerConstant() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsefloatingPointConstant() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsefractionalConstant();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexponent();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefractionalConstant() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e9);\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n\n    return s0;\n  }\n\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e10);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesign() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e11);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigitSequence() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = [];\n    s1 = peg$parsedigit();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsedigit();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsewsp() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e13);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n  peg$parse as parse\n};\n\nexport default {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","import { parse } from './fromTransformAttribute.autogenerated'\n\n/**\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\n * @param transformString {string} Transform string as defined by w3 Consortium\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\n *\n * @example\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\n * [\n *  { type: 'translate', tx: -10, ty: -10},\n *  { type: 'scale', sx: 2, sy: 2 },\n *  { type: 'translate', tx: 10, ty: 10}\n * ]\n *\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\n */\nexport function fromTransformAttribute (transformString) {\n  return parse(transformString)\n}\n","import { scale } from './scale'\nimport { compose } from './transform'\n/**\n * Decompose a matrix into translation, scaling and rotation components, optionally\n * take horizontal and vertical flip in to consideration.\n * Note this function decomposes a matrix in rotation -> scaling -> translation order. I.e. for\n * certain translation T {tx, ty}, rotation R and scaling S { sx, sy }, it's only true for:\n *  decomposeTSR(compose(T, S, R)) === { translate: T, rotation: R, scale: S }\n * composing in a different order may yield a different decomposition result.\n * @param matrix {Matrix} Affine Matrix\n * @param  flipX {boolean} Whether the matrix contains vertical flip, i.e. mirrors on x-axis\n * @param  flipY {boolean} Whether the matrix contains horizontal flip, i.e. mirrors on y-axis\n * @returns {Transform} A transform object consisted by its translation, scaling\n * and rotation components.\n */\nexport function decomposeTSR (matrix, flipX = false, flipY = false) {\n  // Remove flip from the matrix first - flip could be incorrectly interpreted as\n  // rotations (e.g. flipX + flipY = rotate by 180 degrees).\n  // Note flipX is a vertical flip, and flipY is a horizontal flip.\n  if (flipX) {\n    if (flipY) {\n      matrix = compose(matrix, scale(-1, -1))\n    } else {\n      matrix = compose(matrix, scale(1, -1))\n    }\n  } else if (flipY) {\n    matrix = compose(matrix, scale(-1, 1))\n  }\n\n  const a = matrix.a; const b = matrix.b\n  const c = matrix.c; const d = matrix.d\n  let scaleX, scaleY, rotation\n\n  if (a !== 0 || c !== 0) {\n    const hypotAc = Math.hypot(a, c)\n    scaleX = hypotAc\n    scaleY = (a * d - b * c) / hypotAc\n    const acos = Math.acos(a / hypotAc)\n    rotation = c > 0 ? -acos : acos\n  } else if (b !== 0 || d !== 0) {\n    const hypotBd = Math.hypot(b, d)\n    scaleX = (a * d - b * c) / hypotBd\n    scaleY = hypotBd\n    const acos = Math.acos(b / hypotBd)\n    rotation = Math.PI / 2 + (d > 0 ? -acos : acos)\n  } else {\n    scaleX = 0\n    scaleY = 0\n    rotation = 0\n  }\n\n  // put the flip factors back\n  if (flipY) {\n    scaleX = -scaleX\n  }\n\n  if (flipX) {\n    scaleY = -scaleY\n  }\n\n  return {\n    translate: { tx: matrix.e, ty: matrix.f },\n    scale: { sx: scaleX, sy: scaleY },\n    rotation: { angle: rotation }\n  }\n}\n","\n/**\n * Tranformation matrix that mirrors on x-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipX () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on y-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipY () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on origin\n * @returns {Matrix} Affine Matrix\n */\nexport function flipOrigin () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","applyToPoint","matrix","point","Array","isArray","a","c","e","b","d","f","x","y","applyToPoints","points","map","fromObject","object","parseFloat","matrixRegex","fromString","string","parsed","match","length","Error","identity","inverse","denom","isUndefined","val","isNumeric","n","Number","isNaN","isFinite","isAffineMatrix","translate","tx","ty","transform","matrices","multiply","m1","m2","rest","m","compose","cos","Math","sin","PI","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","rotateDEG","undefined","scale","sx","sy","scaleMatrix","shear","shx","shy","tan","skew","ax","ay","skewDEG","toCSS","toString","toSVG","smoothMatrix","precision","round","fromTriangles","t1","t2","px1","py1","px2","py2","qx1","qy1","qx2","qy2","rx1","ry1","rx2","ry2","fromDefinition","definitionOrArrayOfDefinition","mapper","descriptor","type","peg$SyntaxError","message","expected","found","location","this","name","captureStackTrace","peg$parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","transformList","peg$parsetransformList","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","description","peg$e10","peg$classExpectation","peg$e11","peg$e12","peg$e13","peg$currPos","peg$posDetailsCache","line","column","peg$expected","peg$silentFails","startRule","text","ignoreCase","parts","inverted","peg$computePosDetails","pos","p","details","charCodeAt","failPos","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","start","offset","endPosDetails","end","peg$expect","top","variants","push","s1","s2","s3","s4","peg$parsewsp","peg$parsetransforms","s0","ts","peg$parsetransform","peg$parsecommaWsp","concat","s5","s7","s9","s11","s13","s15","s16","s17","rule$expects","substr","peg$parsenumber","peg$parsematrix","s6","s8","t","peg$parsecommaWspNumber","peg$parsetranslate","s","peg$parsescale","r","peg$parsecommaWspTwoNumbers","peg$parserotate","peg$parseskewX","peg$parseskewY","peg$parsesign","d1","d2","peg$parsedigitSequence","join","peg$parsefractionalConstant","peg$parseexponent","peg$parsefloatingPointConstant","peg$parseintegerConstant","parseInt","peg$parsecomma","test","charAt","peg$parsedigit","buildMessage","peg$buildStructuredError","fromTransformAttribute","transformString","parse","decomposeTSR","flipX","flipY","scaleX","scaleY","rotation","hypotAc","hypot","acos","hypotBd","flipOrigin","child","parent","C","constructor","peg$subclass","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","part","classEscape","any","other","not","describeExpectation","hex","ch","toUpperCase","replace","i","j","descriptions","sort","slice","describeExpected","describeFound"],"sourceRoot":""}